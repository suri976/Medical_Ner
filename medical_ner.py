# -*- coding: utf-8 -*-
"""Medical_Ner.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sUc93vB1kjspb-YpsfCrZjxZngx7fQOn
"""

import spacy

# !python -m spacy download en_core_web_sm
!python -m spacy download en_core_web_lg

nlp = spacy.load("en_core_web_lg")
nlp

doc = nlp("Donad Trump was President of USA")

doc

type(doc)

doc.ents

doc.ents[0], type(doc.ents[0])

from spacy import displacy
displacy.render(doc, style="ent", jupyter=True)

from google.colab import drive
drive.mount('/content/drive')

import json
# https://www.kaggle.com/datasets/finalepoch/medical-ner
with open('/content/drive/MyDrive/Medical_Ner/Corona2.json', 'r') as f:
    data = json.load(f)

data['examples'][0].keys()

len(data['examples'][30])

data['examples'][30]

data['examples'][0]['content']

data['examples'][0]['annotations'][0]

training_data = []
for example in data['examples']:
  temp_dict = {}
  temp_dict['text'] = example['content']
  temp_dict['entities'] = []
  for annotation in example['annotations']:
    start = annotation['start']
    end = annotation['end']
    label = annotation['tag_name'].upper()
    temp_dict['entities'].append((start, end, label))
  training_data.append(temp_dict)

print(training_data[0])

training_data[0]['text']

training_data[0]['entities']

training_data[0]['text'][360:371]

from spacy.tokens import DocBin
from tqdm import tqdm

nlp = spacy.blank("en") # load a new spacy model
doc_bin = DocBin()

from spacy.util import filter_spans

for training_example  in tqdm(training_data):
    text = training_example['text']
    labels = training_example['entities']
    doc = nlp.make_doc(text)
    ents = []
    for start, end, label in labels:
        span = doc.char_span(start, end, label=label, alignment_mode="contract")
        if span is None:
            print(span)
            # print("Skipping entity")
        else:
            ents.append(span)
            print(span)
    filtered_ents = filter_spans(ents)
    doc.ents = filtered_ents
    doc_bin.add(doc)

doc_bin.to_disk("train.spacy")

!python -m spacy init fill-config /content/drive/MyDrive/Medical_Ner/base_config.cfg config.cfg

# https://spacy.io/usage/training#quickstart

!python -m spacy train config.cfg --output ./ --paths.train ./train.spacy --paths.dev ./train.spacy

nlp_ner = spacy.load("model-best")

import pickle

nlp_ner = spacy.load("model-best")
# Saving the model to a Pickle file
with open('/content/drive/MyDrive/Medical_Ner/Medical_ner_model.pkl', 'wb') as file:
    pickle.dump(nlp_ner, file)

doc = nlp_ner("While bismuth compounds (Pepto-Bismol) decreased the number of bowel movements in those with travelers' diarrhea, they do not decrease the length of illness.[91] Anti-motility agents like loperamide are also effective at reducing the number of stools but not the duration of disease.[8] These agents should be used only if bloody diarrhea is not present.")

colors = {"PATHOGEN": "#F67DE3", "MEDICINE": "#7DF6D9", "MEDICALCONDITION":"#a6e22d"}
options = {"colors": colors}

spacy.displacy.render(doc, style="ent", options= options, jupyter=True)

doc=("")

doc = nlp_ner("While bismuth compounds (Pepto-Bismol) decreased the number of bowel movements in those with travelers' diarrhea, they do not decrease the length of illness.[91] Anti-motility agents like loperamide are also effective at reducing the number of stools but not the duration of disease.[8] These agents should be used only if bloody diarrhea is not present.")

colors = {"PATHOGEN": "#F67DE3", "MEDICINE": "#7DF6D9", "MEDICALCONDITION":"#a6e22d"}
options = {"colors": colors}

spacy.displacy.render(doc, style="ent", options= options, jupyter=True)



from flask import Flask, request, jsonify
import spacy
from spacy import displacy

app = Flask(__name__)

# Load the spaCy model
nlp_ner = spacy.load("your_model_name")  # Replace with the name of your NER model

@app.route('/ner', methods=['POST'])
def ner():
    # Get the text from the request
    text = request.json.get('text')

    # Perform NER using the loaded spaCy model
    doc = nlp_ner(text)

    # Define entity colors
    colors = {"PATHOGEN": "#F67DE3", "MEDICINE": "#7DF6D9", "MEDICALCONDITION": "#a6e22d"}
    options = {"colors": colors}

    # Render NER entities with colors and return the HTML
    html = displacy.render(doc, style="ent", options=options, page=True)

    return jsonify({"html": html})

if __name__ == '__main__':
    app.run(debug=True)

import requests

url = 'http://127.0.0.1:5000/ner'  # Replace with the actual API endpoint

data = {'text': "While bismuth compounds (Pepto-Bismol) decreased the number of bowel movements in those with travelers' diarrhea, they do not decrease the length of illness.[91] Anti-motility agents like loperamide are also effective at reducing the number of stools but not the duration of disease.[8] These agents should be used only if bloody diarrhea is not present."}

response = requests.post(url, json=data)

if response.status_code == 200:
    html = response.json().get('html')
    # You can render or display the HTML as needed
else:
    print(f"Error: {response.status_code}")



